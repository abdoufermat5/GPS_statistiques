import streamlit as st
import streamlit.components.v1 as components
from gps_uvsq_utils.st_helpers import load_sidebar_footer, load_assets

st.set_page_config(
    page_title="Objectifs",
    page_icon="üéØ",
    layout="wide",
    initial_sidebar_state="expanded",
)
# Main objective page
load_assets()
load_sidebar_footer("Objectifs", "flag_circle")

st.markdown("""<h2 class="text-center" style="background-color:#cad2e0">Objectifs du projet</h2>""", unsafe_allow_html=True)
st.markdown("---")
# enumerer les objectifs du projet avec des puces
st.markdown("""

<div class="card border shadow">
<div class="card-body">
Le premier objectif de notre travail a √©t√© d'effectuer un pr√©traitement du jeu de donn√©es Geolife afin 
de faciliter son analyse ult√©rieure. Ce pr√©traitement a consist√© √† regroup√© les relev√©s GPS en des trajets.
Pour cela nous avons appliquer un ensemble de r√®gles de s√©paration bas√© sur le temps et la vitesse. Cela nous a permis 
d'avoir des trajets plus coh√©rents et plus facilement analysables.
</div>
</div>
<br/>
""", unsafe_allow_html=True)

st.markdown("""
```python
REGLE_TEMPS = 10 * 60  # 10 minutes
REGLE_VITESSE =   {
        "upper": 2, # 2 km/h
        "lower": -2 # -2 km/h
    }
```
""")

st.markdown("""
<div class="card border shadow">
<div class="card-body">
Ensuite, nous avons cherch√© √† d√©terminer les diff√©rents types de transport utilis√©s par les personnes dans les 
trajectoires. Pour cela, nous avons utilis√© une methode heuristique qui consiste √† inf√©rer le mode de transport √† 
partir de la vitesse moyenne du trajet. Nous sommes partis du principe que les trajets effectu√©s √† pied ou √† v√©lo ont 
par exemple une vitesse moyenne inf√©rieure √† 10 km/h et 20km/h respectivement, alors que les trajets effectu√©s en 
voiture ont une vitesse moyenne entre 20 et 80 km/h. Nous avons ainsi cr√©√© des labels pour chaque trajet, en fonction 
du mode de transport utilis√©. Cette classification nous a permis d'obtenir une vision globale des modes de transport 
pr√©f√©r√©s dans les d√©placements de la population √©tudi√©e. 
</div>
</div>
<br/>
""", unsafe_allow_html=True)
st.markdown("""
```python
M_VITESSE = {
        "marche": {
            "min": 0,
            "max": 10
        },
        "velo": {
            "min": 10,
            "max": 20
        },
        "voiture/bus/taxi": {
            "min": 20,
            "max": 80
        },
        "train": {
            "min": 80,
            "max": 580
        },
        "airplane": {
            "min": 580,
            "max": 920
        },
        "other": {
            "min": -1,
            "max": -1
        }
    }
""")

st.markdown("""
<div class="card border shadow">
<div class="card-body">
Nous avons donc cr√©√© une base de donn√©es MongoDB pour stocker les donn√©es de mani√®re organis√©e et facilement 
accessible pour les traitements ult√©rieurs.
</div>
</div>
<br/>
<div class="card border shadow">
<div class="card-body">
Un autre objectif a √©t√© d'identifier les trajets domicile-travail effectu√©s par les utilisateurs. 
Dans cette partie √©galement nous avons adopt√© une approche heuristique. Nous avons cherch√© √† identifier les trajets
domicile-travail en utilisant les donn√©es de localisation des utilisateurs. Un trajet domicile-travail pour un utilisateur
donn√© est repr√©sent√© par les deux clusters les plus charg√©s de points de localisation. Nous avons donc cherch√© √†
identifier ces deux clusters.
</div>
</div>
<br/>
<div class="card border shadow">
<div class="card-body">
Enfin le dernier objectif de notre travail consistait √† cr√©er des profiles de personnes en fonction de leurs trajets et
de leurs modes de transport. 
</div>
</div>
""", unsafe_allow_html=True)

